index:

  name: basic_index

  steps:
    - step: OCPreprocessor
      name: simple_pre_processor
      step_args:
        add_punctuation: false
        remove_whitespace: false
      depends_on: [ ]

    - step: OCChunker
      name: simple_chunker
      step_args:
        chunk_size_words: 320
        chunk_overlap: 30
        split_by: word
        split_respect_sentence_boundary: true
        hard_split_max_chars: 2400
      depends_on: [ simple_pre_processor ]

    - step: SentenceTransformerEmbedder
      name: sentence-transformers
      step_args:
        model_name: BAAI/bge-base-en-v1.5
        batch_size: 4
        include_metadata: [ title, file_name ]
      depends_on: [ simple_chunker ]

    - step: LexRank
      name: lexranker_file
      step_args:
        scope: file
      depends_on: [ sentence-transformers ]

    - step: LouvainCommunityDetection
      name: louvain
      step_args:
        assign_labels: gpt-3.5-turbo # RateLimit later
      depends_on: [ lexranker_file ]

query:

  name: basic_query
  steps:
    - step: GetChunks
      name: get_chunks
      step_args:
          metadata_json: {}
          top_k: null
      depends_on: [ ]


    - step: LouvainCommunityDetection
      name: louvain_global
      step_args:
      depends_on: [ get_chunks ]

    - step: HdbScan
      name: hdbscan_global
      step_args:
        # you define the scope by metadata filters.
        # no metadata filters means global, i.e. all chunks in the kb
        fit: true
        assign_labels: gpt-3.5-turbo-1106 # RateLimit later
        min_cluster_size: 5
      depends_on: [ louvain_global ]

    - step: UpdateOnDb
      name: update_db
      step_args:
      depends_on: [ hdbscan_global ]


