index:

  name: basic_index

  steps:
    - step: OCPreprocessor
      name: simple_pre_processor
      step_args:
        add_punctuation: false
        remove_whitespace: false
      depends_on: [ ]

    - step: OCChunker
      name: simple_chunker
      step_args:
        chunk_size_words: 320
        chunk_overlap: 30
        split_by: word
        split_respect_sentence_boundary: true
        hard_split_max_chars: 2400
      depends_on: [ simple_pre_processor ]

    - step: SentenceTransformerEmbedder
      name: sentence-transformers
      step_args:
        model_name: BAAI/bge-base-en-v1.5
        batch_size: 4
        include_metadata: [ title, file_name ]
      depends_on: [ simple_chunker ]

    - step: LexRank
      name: lexranker_file
      step_args:
        scope: file
      depends_on: [ sentence-transformers ]

    - step: LouvainCommunityDetection
      name: louvain
      step_args:
        assign_labels: gpt-3.5-turbo # RateLimit later
      depends_on: [ lexranker_file ]


query:

  name: test_query

  steps:
    - step: OCRetriever
      name: retainit_retriever
      step_args:
        query: tell me all about large language models and their generalisation capabilities
        model_name: BAAI/bge-base-en-v1.5
        top_k: 100
        metadata_filters: { }
      depends_on: [ ]

    - step: LexRank
      name: lexranker_retainit
      step_args:
        # you define the scope by metadata filters.
        # no metadata filters means global, i.e. all chunks in the kb
      depends_on: [ retainit_retriever ]

    - step: LouvainCommunityDetection
      name: louvain_retainit
      step_args:
        # you define the scope by metadata filters.
        # no metadata filters means global, i.e. all chunks in the kb
      depends_on: [ lexranker_retainit ]

    - step: FilterInMemory
      name: retainit_filter
      step_args:
        key: lexranker_retainit.percentile_score
        comparator: $gt
        value: 0.5
      depends_on: [ louvain_retainit ]

    - step: OCReranker
      name: oc_reranker_test
      step_args:
        # you define the scope by metadata filters.
        # no metadata filters means global, i.e. all chunks in the kb
        query: ARG
        model_name: BAAI/bge-reranker-base
        top_k: 30
      depends_on: [ retainit_filter ]


